***************** NOMBRE *******************
fmod NATURAL is
***************** CONJUNTOS ****************
  protecting BOOL .
  sort N .
  op cero : -> N .
  op sucesor : N -> N .
  op suma : N N -> N .
  op esCero : N -> Bool .
  op esIgual : N N -> Bool .
***************** SEMANTICA ****************
  var n m : N .
  eq suma(cero, n) = n .
  eq suma(sucesor(m), n) = sucesor(suma(m, n)) .
  eq esCero(cero) = true .
  eq esCero(sucesor(n)) = false .
  eq esIgual(cero, n) = esCero(n) .
  eq esIgual(sucesor(n), cero) = false .
  eq esIgual(sucesor(n), sucesor(m)) = esIgual(n, m) .
endfm

***************** NOMBRE *******************
fmod VOCAL is
***************** CONJUNTOS ****************
  protecting BOOL .
  sort V .
***************** SINTAXIS *****************
  ops A E I O U : -> V .
  op esIgual : V V -> Bool .
  op esMenor : V V -> Bool .
***************** SEMANTICA ****************
  var v w : V .
  eq esIgual(v, v) = true .
  eq esIgual(v, w) = false .


  eq esMenor(A, E) = true . 
  eq esMenor(A, I) = true .  
  eq esMenor(A, O) = true .  
  eq esMenor(A, U) = true .

  eq esMenor(E, I) = true .  
  eq esMenor(E, O) = true .  
  eq esMenor(E, U) = true .

  eq esMenor(I, O) = true .  
  eq esMenor(I, U) = true .

  eq esMenor(O, U) = true .
  
  eq esMenor(v, w) = false .
endfm

***************** NOMBRE *******************
fmod LISTA is
***************** CONJUNTOS ****************
  protecting BOOL .
  protecting NATURAL .
  protecting VOCAL .
  sort L .
  sort MensajeListas .
  subsort MensajeListas < V .

***************** SINTAXIS *****************
  op listaVacia : -> L .
  op insertar : V L -> L .
  op insertarFinal : V L -> L .
  op esVacia : L -> Bool .
  op tamano : L -> N .

  op esIgual : L L -> Bool .
  op esMenor : L L -> Bool .
  op buscar : V L -> N .
  op posicion : N L -> V .

  op ERRORFUERADELISTA : -> MensajeListas .

***************** SEMANTICA ****************
  vars v w : V .
  vars l k : L .
  var n : N .

  eq esVacia(listaVacia) = true .
  eq esVacia(insertar(v, l)) = false .

  eq insertarFinal(v, listaVacia) = insertar(v, listaVacia) .
  eq insertarFinal(v, insertar(w, l)) = insertar(w, insertarFinal(v, l)) .

  eq tamano(listaVacia) = cero .
  eq tamano(insertar(v, l)) = sucesor(tamano(l)) .

  eq esIgual(listaVacia, listaVacia) = true .
  eq esIgual(listaVacia, insertar(v, l)) = false .
  eq esIgual(insertar(v, l), listaVacia) = false .
  eq esIgual(insertar(v, l), insertar(w, k)) =
     if esIgual(v, w) then esIgual(l, k) else false fi .

  eq esMenor(listaVacia, listaVacia) = false .
  eq esMenor(listaVacia, insertar(v, l)) = true .
  eq esMenor(insertar(v, l), listaVacia) = false .
  eq esMenor(insertar(v, l), insertar(w, k)) =
     if esIgual(v, w) then esMenor(l, k) else esMenor(v, w) fi .

  eq buscar(v, listaVacia) = sucesor(cero) .
  eq buscar(v, insertar(w, l)) =
     if esIgual(v, w)
     then cero
     else sucesor(buscar(v, l))
     fi .

  eq posicion(n, listaVacia) = ERRORFUERADELISTA .
  eq posicion(cero, insertar(v, l)) = v .
  eq posicion(sucesor(n), insertar(v, l)) = posicion(n, l) .
endfm

