***************** NOMBRE *******************
fmod VOCAL is

***************** CONJUNTOS ****************
   protecting BOOL .
   sort V .

***************** SINTAXIS *****************
   ops A E I O U : -> V .
   op esIgual    : V V -> Bool .
   op esDistinta : V V -> Bool .
   op esMenor    : V V -> Bool .

***************** SEMANTICA ****************
   vars v w : V .

   eq esIgual(v, v) = true .
   eq esIgual(v, w) = false .

   eq esDistinta(v, w) = not esIgual(v, w) .

   eq esMenor(A, E) = true .
   eq esMenor(A, I) = true .
   eq esMenor(A, O) = true .
   eq esMenor(A, U) = true .

   eq esMenor(E, I) = true .
   eq esMenor(E, O) = true .
   eq esMenor(E, U) = true .

   eq esMenor(I, O) = true .
   eq esMenor(I, U) = true .

   eq esMenor(O, U) = true .

   eq esMenor(v, w) = false .

endfm


***************** NOMBRE *******************
fmod NATURAL is

***************** CONJUNTOS ****************
   protecting BOOL .
   sort N .

***************** SINTAXIS *****************
   op cero : -> N .
   op sucesor : N -> N .
   op suma : N N -> N .

***************** SEMANTICA ****************
   vars n m : N .

   eq suma(cero, n) = n .
   eq suma(sucesor(m), n) = sucesor(suma(m, n)) .

endfm


***************** NOMBRE *******************
fmod PILA is

***************** CONJUNTOS ****************
   protecting BOOL .
   protecting VOCAL .
   protecting NATURAL .

   sort MensajePilas .
   sort P .
   subsorts MensajePilas < V .

***************** SINTAXIS *****************
   op pilaVacia : -> P .
   op esVacia   : P -> Bool .
   op push      : V P -> P .
   op pop       : P -> P .
   op tope      : P -> V .

   --- nuevas operaciones
   op esIgual      : P P -> Bool .
   op primero      : P -> V .
   op tamano       : P -> N .
   op cuentaVocal  : V P -> N .

   op ERRORPILAVACIA : -> MensajePilas .

***************** SEMANTICA ****************
   vars p q : P .
   var v w  : V .

   --- operaciones básicas
   eq esVacia(pilaVacia) = true .
   eq esVacia(push(v, p)) = false .

   eq pop(pilaVacia) = pilaVacia .
   eq pop(push(v, p)) = p .

   eq tope(pilaVacia) = ERRORPILAVACIA .
   eq tope(push(v, p)) = v .

   --- esIgual entre pilas
   eq esIgual(pilaVacia, pilaVacia) = true .
   eq esIgual(push(v, p), push(w, q)) = (esIgual(v, w) and esIgual(p, q)) .
   eq esIgual(pilaVacia, push(v, p)) = false .
   eq esIgual(push(v, p), pilaVacia) = false .

   --- primero: obtiene el primer elemento insertado
   eq primero(pilaVacia) = ERRORPILAVACIA .
   eq primero(push(v, pilaVacia)) = v .
   eq primero(push(v, p)) = primero(p) .

   --- tamano: cuenta el número total de elementos
   eq tamano(pilaVacia) = cero .
   eq tamano(push(v, p)) = sucesor(tamano(p)) .

   --- cuentaVocal: número de veces que aparece una vocal
   eq cuentaVocal(v, pilaVacia) = cero .
   eq cuentaVocal(v, push(w, p)) =
      if esIgual(v, w)
      then sucesor(cuentaVocal(v, p))
      else cuentaVocal(v, p)
      fi .

endfm

